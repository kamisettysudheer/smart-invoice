name: Mobile App CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mobile/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mobile/**'

jobs:
  # Android Build
  android:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
          
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Build Android Debug APK
        run: |
          cd android
          ./gradlew assembleDebug
          
      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: android-debug-apk
          path: mobile/android/app/build/outputs/apk/debug/
          
      - name: Build Android Release AAB
        if: github.ref == 'refs/heads/main'
        run: |
          cd android
          ./gradlew bundleRelease
          
      - name: Upload Release AAB
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: android-release-aab
          path: mobile/android/app/build/outputs/bundle/release/

  # iOS Build
  ios:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./mobile
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install CocoaPods
        run: |
          cd ios
          pod install
          
      - name: Run tests
        run: npm test
        
      - name: Build iOS Debug
        run: |
          cd ios
          xcodebuild -workspace SmartInvoice.xcworkspace \
                     -scheme SmartInvoice \
                     -configuration Debug \
                     -destination 'platform=iOS Simulator,name=iPhone 14' \
                     build
                     
      - name: Build iOS Release
        if: github.ref == 'refs/heads/main'
        run: |
          cd ios
          xcodebuild -workspace SmartInvoice.xcworkspace \
                     -scheme SmartInvoice \
                     -configuration Release \
                     -archivePath SmartInvoice.xcarchive \
                     archive
                     
      - name: Upload iOS Archive
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: ios-archive
          path: mobile/ios/SmartInvoice.xcarchive

  # Mobile deployment (TestFlight, Play Store Console, etc.)
  deploy-mobile:
    needs: [android, ios]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to App Stores
        run: |
          echo "Deploy to TestFlight and Play Store Console"
          # Add deployment scripts here
          # Could use fastlane or other deployment tools
